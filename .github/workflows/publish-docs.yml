name: publish docs

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  get-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages

      - name: archive existing docs
        run: tar -cvzf docs.tar.gz ./

      - name: Upload docs artifact
        uses: actions/upload-artifact@v3
        with:
          name: docs
          path: docs.tar

  deploy-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Retrieve existing docs archive
        uses: actions/download-artifact@v3
        with:
          name: docs

      - name: Decompress docs
        run: |
          mkdir -p ./docs
          tar -xzf docs.tar.gz -C ./docs

      - name: Discard docs.tar
        run: rm docs.tar

      - name: Setup node.js @ 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache node_modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm ci

      - name: Check build compiles
        run: npm run build

      - name: Generate API reference
        run: npm run docs

      - name: Publish to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
